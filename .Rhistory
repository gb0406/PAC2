require(ensembldb)
require(EnsDb.Hsapiens.v86)
edb <- EnsDb.Hsapiens.v86
res.NITvsSFI$symbol <- mapIds(edb,
keys=row.names(res.NITvsSFI),
column="SYMBOL",
keytype="GENEID",
multiVals="list")
res.NITvsSFI$entrez <- mapIds(edb,
keys=row.names(res.NITvsSFI),
column="ENTREZID",
keytype="GENEID",
multiVals="list")
res.NITvsSFI$gene.name <- mapIds(edb,
keys=row.names(res.NITvsSFI),
column="GENENAME",
keytype="GENEID",
multiVals="list")
resOrdNF<- res.NITvsSFI[order(res.NITvsSFI$pvalue),]
res.SFIvsELI$symbol <- mapIds(edb,
keys=row.names(res.SFIvsELI),
column="SYMBOL",
keytype="GENEID",
multiVals="list")
res.SFIvsELI$gene.name <- mapIds(edb,
keys=row.names(res.SFIvsELI),
column="GENENAME",
keytype="GENEID",
multiVals="list")
res.SFIvsELI$ENTREZ <- mapIds(edb,
keys=row.names(res.SFIvsELI),
column="ENTREZID",
keytype="GENEID",
multiVals="list")
resOrdSE<- res.SFIvsELI[order(res.SFIvsELI$pvalue),]
res.ELIvsNIT$symbol <- mapIds(edb,
keys=row.names(res.ELIvsNIT),
column="SYMBOL",
keytype="GENEID",
multiVals="list")
res.ELIvsNIT$entrez <- mapIds(edb,
keys=row.names(res.ELIvsNIT),
column="ENTREZID",
keytype="GENEID",
multiVals="list")
res.ELIvsNIT$gene.name <- mapIds(edb,
keys=row.names(res.ELIvsNIT),
column="GENENAME",
keytype="GENEID",
multiVals="list")
resOrdEN<- res.ELIvsNIT[order(res.ELIvsNIT$pvalue),]
write.csv(as.data.frame(resOrdNF), file="fdata/res_NITvsSFI.csv")
write.csv(as.data.frame(resOrdSE),file="fdata/res_ELIvsNITs.csv")
write.csv(as.data.frame(resOrdEN),file="fdata/res_SFIvsELI.csv")
resOrdNSx <- resOrdNS[1:5,5:9 ]
resOrdNS<- res.NITvsSFI[order(res.NITvsSFI$pvalue),]
resOrdNSx <- resOrdNS[1:5,5:9 ]
kable(resOrdNSx, booktabs = TRUE, caption = " Anotación genes NIT vs SFI")%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "center",font_size = 10)
resOrdSEx <- resOrdNS[1:5,5:9 ]
kable(resOrdSEx , booktabs = TRUE, caption = " Anotación genes ELI vs SFI")%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "center",font_size = 10)
resOrdENx <- resOrdEN[1:5,5:9 ]
kable(resOrdENx,booktabs = TRUE, caption = " Anotación genes NIT vs ELI")%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "center",font_size = 10)
listOfTables <- list(NITvsELI=resOrdEN,
SFIvsELI= resOrdSE,
NITvsSFI= resOrdNS)
listOfSelected <- list()
for (i in 1:length(listOfTables)){
topTab <- listOfTables[[i]]
whichGenes<-topTab["adj.P.Val"]<0.15
selectedIDs <- rownames(topTab)[whichGenes]
GOIDs<- select(edb, selectedIDs, c("SYMBOL"))
GOIDs <- GOIDs$SYMBOL
listOfSelected[[i]] <- GOIDs
names(listOfSelected)[i] <- names(listOfTables)[i]
}
topTab <- listOfTables[[1]]
whichGenes<-topTab["adj.P.Val"]<0.15
whichGenes<-topTab["pvalue"]<0.15
View(topTab)
topTab["pvalue"]
topTab["pvalue"]<0.15
topTab["pvalue"<0.15]
topTab["pvalue"]
as.numeric(topTab["pvalue"])
as.vector(topTab["pvalue"])
unlist(topTab["pvalue"])
unlist(topTab["pvalue"])<0.15
whichGenes<-unlist(topTab["pvalue"])<0.15
selectedIDs <- rownames(topTab)[whichGenes]
selectedIDs
GOIDs<- select(edb, selectedIDs, c("SYMBOL"))
GOIDs<- select(edb, selectedIDs, "SYMBOL")
is.vector(selectedIDs)
GOIDs<- select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
GOIDs <- GOIDs$SYMBOL
listOfSelected[[1]] <- GOIDs
names(listOfSelected)[1] <- names(listOfTables)[1]
listOfTables <- list(NITvsELI=resOrdEN,
SFIvsELI= resOrdSE,
NITvsSFI= resOrdNS)
listOfSelected <- list()
for (i in 1:length(listOfTables)){
topTab <- listOfTables[[i]]
whichGenes<-unlist(topTab["pvalue"])<0.15
selectedIDs <- rownames(topTab)[whichGenes]
GOIDs<- select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
GOIDs <- GOIDs$SYMBOL
listOfSelected[[i]] <- GOIDs
names(listOfSelected)[1] <- names(listOfTables)[i]
}
sapply(listOfSelected, length)
listOfData <- listOfSelected[1:3]
comparisonsNames <- names(listOfData)
library(org.Hs.eg.db)
for (i in 1:3){
comparison <- comparisonsNames[i]
gene.df <- bitr(na.omit(listOfData[[i]]), fromType = "SYMBOL",
toType = c("SYMBOL","GO","GENENAME"),
OrgDb = org.Hs.eg.db)
enrich.result <- enrichGO(gene= gene.df$SYMBOL,
OrgDb         = org.Hs.eg.db,
keyType       = 'SYMBOL',
ont           = "ALL",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
write.csv(as.data.frame(enrich.result),
file =paste0("./fdata/cluster/","CLUSTER_Results_",comparison,".csv"),
row.names = FALSE)
png(file=paste0("./fdata/cluster/","CLUSTER_Barplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(barplot(enrich.result, showCategory = 15, font.size = 14,
title = paste0("Cluster Profile Analysis for ", comparison,". Barplot")))
dev.off()
png(file = paste0("./fdata/cluster/","CLUSTER_cnetplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75))
dev.off()
png(file=paste0("./results/cluster/","CLUSTER_emapplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(emapplot(enrich.result, pie_scale=1,layout="kk", font.size = 24,
title = paste0("Cluster Profile Analysis for ", comparison,". emapplot")))
dev.off()
}
require(clusterProfiler)
require(enrichplot)
for (i in 1:3){
comparison <- comparisonsNames[i]
gene.df <- bitr(na.omit(listOfData[[i]]), fromType = "SYMBOL",
toType = c("SYMBOL","GO","GENENAME"),
OrgDb = org.Hs.eg.db)
enrich.result <- enrichGO(gene= gene.df$SYMBOL,
OrgDb         = org.Hs.eg.db,
keyType       = 'SYMBOL',
ont           = "ALL",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
write.csv(as.data.frame(enrich.result),
file =paste0("./fdata/cluster/","CLUSTER_Results_",comparison,".csv"),
row.names = FALSE)
png(file=paste0("./fdata/cluster/","CLUSTER_Barplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(barplot(enrich.result, showCategory = 15, font.size = 14,
title = paste0("Cluster Profile Analysis for ", comparison,". Barplot")))
dev.off()
png(file = paste0("./fdata/cluster/","CLUSTER_cnetplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75))
dev.off()
png(file=paste0("./results/cluster/","CLUSTER_emapplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(emapplot(enrich.result, pie_scale=1,layout="kk", font.size = 24,
title = paste0("Cluster Profile Analysis for ", comparison,". emapplot")))
dev.off()
}
View(topTab)
for (i in 1:3){
comparison <- comparisonsNames[i]
gene.df <- bitr(na.omit(listOfData[[i]]), fromType = "SYMBOL",
toType = c("SYMBOL","GO","GENENAME"),
OrgDb = org.Hs.eg.db)
enrich.result <- enrichGO(gene= gene.df$SYMBOL,
OrgDb         = org.Hs.eg.db,
keyType       = 'SYMBOL',
ont           = "ALL",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
write.csv(as.data.frame(enrich.result),
file =paste0("fdata/cluster/","CLUSTER_Results_",comparison,".csv"),
row.names = FALSE)
png(file=paste0("fdata/cluster/","CLUSTER_Barplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(barplot(enrich.result, showCategory = 15, font.size = 14,
title = paste0("Cluster Profile Analysis for ", comparison,". Barplot")))
dev.off()
png(file = paste0("fdata/cluster/","CLUSTER_cnetplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75))
dev.off()
png(file=paste0("results/cluster/","CLUSTER_emapplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(emapplot(enrich.result, pie_scale=1,layout="kk", font.size = 24,
title = paste0("Cluster Profile Analysis for ", comparison,". emapplot")))
dev.off()
}
for (i in 1:3){
comparison <- comparisonsNames[i]
gene.df <- bitr(na.omit(listOfData[[i]]), fromType = "SYMBOL",
toType = c("SYMBOL","GO","GENENAME"),
OrgDb = org.Hs.eg.db)
enrich.result <- enrichGO(gene= gene.df$SYMBOL,
OrgDb         = org.Hs.eg.db,
keyType       = 'SYMBOL',
ont           = "ALL",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
write.csv(as.data.frame(enrich.result),
file =paste0("fdata/cluster/","CLUSTER_Results_",comparison,".csv"),
row.names = FALSE)
png(file=paste0("fdata/cluster/","CLUSTER_Barplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(barplot(enrich.result, showCategory = 15, font.size = 14,
title = paste0("Cluster Profile Analysis for ", comparison,". Barplot")))
dev.off()
png(file = paste0("fdata/cluster/","CLUSTER_cnetplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75))
dev.off()
png(file=paste0("results/cluster/","CLUSTER_emapplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(emapplot(enrich.result, pie_scale=1,layout="kk", font.size = 24,
title = paste0("Cluster Profile Analysis for ", comparison,". emapplot")))
dev.off()
}
file
paste0("fdata/cluster/","CLUSTER_cnetplot_",comparison,".png")
png(file=paste0("results/cluster/","CLUSTER_emapplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
png(file=paste0("results/cluster/","CLUSTER_emapplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
tiff(file=paste0("results/cluster/","CLUSTER_emapplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
tiff(file=paste0("results/cluster/","CLUSTER_emapplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(emapplot(enrich.result, pie_scale=1,layout="kk", font.size = 24,
title = paste0("Cluster Profile Analysis for ", comparison,". emapplot")))
dev.off()
jpeg(file=paste0("results/cluster/","CLUSTER_emapplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
for (i in 1:3){
comparison <- comparisonsNames[i]
gene.df <- bitr(na.omit(listOfData[[i]]), fromType = "SYMBOL",
toType = c("SYMBOL","GO","GENENAME"),
OrgDb = org.Hs.eg.db)
enrich.result <- enrichGO(gene= gene.df$SYMBOL,
OrgDb         = org.Hs.eg.db,
keyType       = 'SYMBOL',
ont           = "ALL",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
write.csv(as.data.frame(enrich.result),
file =paste0("fdata/cluster/","CLUSTER_Results_",comparison,".csv"),
row.names = FALSE)
png(file=paste0("fdata/cluster/","CLUSTER_Barplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(barplot(enrich.result, showCategory = 15, font.size = 14,
title = paste0("Cluster Profile Analysis for ", comparison,". Barplot")))
dev.off()
png(file = paste0("fdata/cluster/","CLUSTER_cnetplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75))
dev.off()
}
comparison
comparisonsNames
comparisonsNames <- names(listOfData)
listOfTables <- list(NITvsELI=resOrdEN,
SFIvsELI= resOrdSE,
NITvsSFI= resOrdNS)
listOfSelected <- list()
for (i in 1:length(listOfTables)){
topTab <- listOfTables[[i]]
whichGenes<-unlist(topTab["pvalue"])<0.15
selectedIDs <- rownames(topTab)[whichGenes]
GOIDs<- select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
GOIDs <- GOIDs$SYMBOL
listOfSelected[[i]] <- GOIDs
names(listOfSelected)[1] <- names(listOfTables)[i]
}
sapply(listOfSelected, length)
listOfTables <- list(NITvsELI=resOrdEN,
SFIvsELI= resOrdSE,
NITvsSFI= resOrdNS)
listOfSelected <- list()
for (i in 1:length(listOfTables)){
topTab <- listOfTables[[i]]
whichGenes<-unlist(topTab["pvalue"])<0.15
selectedIDs <- rownames(topTab)[whichGenes]
GOIDs<- select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
GOIDs <- GOIDs$SYMBOL
listOfSelected[[i]] <- GOIDs
names(listOfSelected)[i] <- names(listOfTables)[i]
}
sapply(listOfSelected, length)
listOfData <- listOfSelected[1:3]
comparisonsNames <- names(listOfData)
for (i in 1:3){
comparison <- comparisonsNames[i]
gene.df <- bitr(na.omit(listOfData[[i]]), fromType = "SYMBOL",
toType = c("SYMBOL","GO","GENENAME"),
OrgDb = org.Hs.eg.db)
enrich.result <- enrichGO(gene= gene.df$SYMBOL,
OrgDb         = org.Hs.eg.db,
keyType       = 'SYMBOL',
ont           = "ALL",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
write.csv(as.data.frame(enrich.result),
file =paste0("fdata/cluster/","CLUSTER_Results_",comparison,".csv"),
row.names = FALSE)
png(file=paste0("fdata/cluster/","CLUSTER_Barplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(barplot(enrich.result, showCategory = 15, font.size = 14,
title = paste0("Cluster Profile Analysis for ", comparison,". Barplot")))
dev.off()
png(file = paste0("fdata/cluster/","CLUSTER_cnetplot_",comparison,".png"),
width = 1080, height = 1080, units = 'px')
print(cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75))
dev.off()
}
enrich.result <- read.csv2(file.path("results/cluster/CLUSTER_Results_NITvsSFI.csv"),
sep = ",", header = TRUE)
enrich.result <- read.csv("results/cluster/CLUSTER_Results_NITvsSFI.csv",
sep = ",", header = TRUE)
enrich.result <- read.csv("fdata/cluster/CLUSTER_Results_NITvsSFI.csv",
sep = ",", header = TRUE)
Tab.react_RLM <- enrich.result[1:4,1:6]
kable(Tab.react_RLM, booktabs = TRUE, caption = "Análisis GEO plantas infectadas TRV")%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "center",font_size = 10)
View(Tab.react_RLM)
View(enrich.result)
citation(org.Hs.eg.db)
citation("org.Hs.eg.db")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, cache = TRUE, warning = FALSE,
comment = NA, prompt = TRUE, tidy = FALSE,
fig.width = 7, fig.height = 7, fig_caption = TRUE,
cache=FALSE,fig.align='center')
library(EnsDb.Hsapiens.v86)
View(targets)
kable(resSig.SFIvsELI[1:3,],caption = "Infiltración corta focal vs. extensa linfoide (lfc < 0.1)")%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "center",font_size = 9)
kable(resSig.SFIvsELI[1:3],caption = "Infiltración corta focal vs. extensa linfoide (lfc < 0.1)")%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "center",font_size = 9)
kable(resSig.SFIvsELI[1:3,],caption = "Infiltración corta focal vs. extensa linfoide (lfc < 0.1)")%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "center",font_size = 9)
View(resSig.SFIvsELI)
resSig.SFIvsELI<- resSig.SFIvsELI[ order(resSig.SFIvsELI$log2FoldChange, decreasing = TRUE) ]
resSig.SFIvsELI<- resSig.SFIvsELI[ order(resSig.SFIvsELI$log2FoldChange, decreasing = TRUE), ]
resSig.ELIvsNIT<- resSig.ELIvsNIT[ order(resSig.ELIvsNIT$log2FoldChange, decreasing = TRUE)]
resSig.ELIvsNIT<- resSig.ELIvsNIT[ order(resSig.ELIvsNIT$log2FoldChange, decreasing = TRUE),]
# guardamos los datos para un uso posterior
write.csv(norm_counts, file="result/normalized_counts.csv")
View(rld)
genex<- ensembldb::select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
genex<-select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
select
genex<-AnnotationDbi::select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
resOrdEN<-read.csv("result/res_ELIvsNITs.csv")
resOrdSE<-read.csv("result/res_SFIvsELI.csv")
resOrdNS<-read.csv("result/res_NITvsSFI.csv")
listOfTables <- list(NITvsELI=resOrdEN,
SFIvsELI= resOrdSE,
NITvsSFI= resOrdNS)
listOfSelected <- list()
for (i in 1:length(listOfTables)){
topTab <- listOfTables[[i]]
whichGenes<-unlist(topTab["pvalue"])<0.15
selectedIDs <- rownames(topTab)[whichGenes]
genex<-AnnotationDbi::select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
genex <- genex$SYMBOL
listOfSelected[[i]] <- genex
names(listOfSelected)[i] <- names(listOfTables)[i]
}
sapply(listOfSelected, length)
listOfTables <- list(NITvsELI=resOrdEN,
SFIvsELI= resOrdSE,
NITvsSFI= resOrdNS)
listOfSelected <- list()
for (i in 1:length(listOfTables)){
topTab <- listOfTables[[i]]
whichGenes<-(topTab["pvalue"])<0.15
selectedIDs <- rownames(topTab)[whichGenes]
genex<-AnnotationDbi::select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
genex <- genex$SYMBOL
listOfSelected[[i]] <- genex
names(listOfSelected)[i] <- names(listOfTables)[i]
}
sapply(listOfSelected, length)
View(topTab)
whichGenes<-topTab$pvalue<0.15
whichGenes<-(topTab$pvalue)<0.15
whichGenes<-(topTab$pvalue)<=0.15
whichGenes<-(as.numeric(topTab$pvalue))<0.15
listOfTables <- list(NITvsELI=resOrdEN,
SFIvsELI= resOrdSE,
NITvsSFI= resOrdNS)
listOfSelected <- list()
for (i in 1:length(listOfTables)){
topTab <- listOfTables[[i]]
whichGenes<-(as.numeric(topTab$pvalue))<0.15
selectedIDs <- rownames(topTab)[whichGenes]
genex<-AnnotationDbi::select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
genex <- genex$SYMBOL
listOfSelected[[i]] <- genex
names(listOfSelected)[i] <- names(listOfTables)[i]
}
sapply(listOfSelected, length)
for (i in 1:length(listOfTables)){
topTab <- listOfTables[[i]]
whichGenes<-(as.numeric(topTab$pvalue))< 0.15
selectedIDs <- topTab$X[whichGenes]
genex<-AnnotationDbi::select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
genex <- genex$SYMBOL
listOfSelected[[i]] <- genex
names(listOfSelected)[i] <- names(listOfTables)[i]
}
sapply(listOfSelected, length)
listOfTables <- list(NITvsELI=resOrdEN,
SFIvsELI= resOrdSE,
NITvsSFI= resOrdNS)
listOfSelected <- list()
for (i in 1:length(listOfTables)){
topTab <- listOfTables[[i]]
whichGenes<-(as.numeric(topTab$pvalue))< 0.15
selectedIDs <- topTab$X[whichGenes]
genex<-select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
genex <- genex$SYMBOL
listOfSelected[[i]] <- genex
names(listOfSelected)[i] <- names(listOfTables)[i]
}
sapply(listOfSelected, length
listOfTables <- list(NITvsELI=resOrdEN,
SFIvsELI= resOrdSE,
NITvsSFI= resOrdNS)
listOfSelected <- list()
for (i in 1:length(listOfTables)){
topTab <- listOfTables[[i]]
whichGenes<-(as.numeric(topTab$pvalue))< 0.15
selectedIDs <- topTab$X[whichGenes]
genex<-select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
genex <- genex$SYMBOL
listOfSelected[[i]] <- genex
names(listOfSelected)[i] <- names(listOfTables)[i]
}
sapply(listOfSelected, length)
selectedIDs
listOfTables <- list(NITvsELI=resOrdEN,
SFIvsELI= resOrdSE,
NITvsSFI= resOrdNS)
listOfSelected <- list()
for (i in 1:length(listOfTables)){
topTab <- listOfTables[[i]]
whichGenes<-(as.numeric(topTab$pvalue))< 0.15
selectedIDs <- as.vector(topTab$X[whichGenes])
genex<-select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
genex <- genex$SYMBOL
listOfSelected[[i]] <- genex
names(listOfSelected)[i] <- names(listOfTables)[i]
}
sapply(listOfSelected, length)
topTab <- listOfTables[[1]]
View(topTab)
whichGenes<-(as.numeric(topTab$pvalue))< 0.15
selectedIDs <- as.vector(topTab$X[whichGenes])
genex<-select(edb, keys=selectedIDs, keytype = "GENEID", columns = c("SYMBOL", "GENENAME"))
enex<-select(edb, keys=selectedIDs, keytype = "GENEID", columns = "SYMBOL")
selectedIDs <- as.vector(topTab$X[whichGenes])
selectedIDs <- topTab$X[whichGenes]
selectedIDs
NIT<-targets[which(targets$Group=="NIT" &
targets$molecular_data_type=="RNA Seq (NGS)"),]
head(assay(rld[1:3,])
head(assay(rld[1:3,])
head(assay(rld[1:3,]))
t(data.frame(assay(rld[1:3,]))
t(data.frame(assay(rld[1:3,])))
t(data.frame(assay(rld[1:3,])))
kable(tn,caption = "Tabla 4: Normalización Log2")%>%
kable_styling(bootstrap_options = "striped", full_width = F,
position = "center",font_size = 10)
tn<-t(data.frame(assay(rld[1:3,])))
kable(tn,caption = "Tabla 4: Normalización Log2")%>%
kable_styling(bootstrap_options = "striped", full_width = F,
position = "center",font_size = 10)
tnl<-t(data.frame(norm_counts_log[1:3,]))
kable(tnl,caption = "Tabla 4: Normalización Log2")%>%
kable_styling(bootstrap_options = "striped", full_width = F,
position = "center",font_size = 10)
